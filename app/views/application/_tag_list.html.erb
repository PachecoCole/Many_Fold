<% if current_user.tag_cloud_settings["keypair"] %>
  <% plaintags = tags.select { |obj| obj.name.exclude?(":") } %>
  <% tiertags = tags.select { |obj| obj.name.include?(":") } %>
  <% tiers = tiertags.map(&:name).map { |tag| tag.split(":").first }.uniq.sort %>
  <% if @models
       tierunset = tiers.map { |tier|
         reg = ActiveRecord::Base.connection.quote("^" + tier + ":")
         regact = Rails.env.development? ? "REGEXP" : "~"
         [tier, @models.where("(select count(*) from tags join taggings on tags.id=taggings.tag_id where tags.name #{regact} #{reg} and taggings.taggable_id=models.id and taggings.taggable_type='Model')<1").count]
       }.to_h
     end %>
  <% tags = plaintags %>
<% end %>
<% tags.each do |tag| %>
  <%= render partial: "tag", locals: {tag: tag, state: ((defined?(muted_tags) && muted_tags.include?(tag)) ? (current_user.tag_cloud_settings["hide_unrelated"] ? :hide : :mute) : :normal)} %>
<% end %>
<% if current_user.tag_cloud_settings["keypair"] %>
  <ul class="list-unstyled">
    <% tiers.each do |tier| %>
      <li>
        <details id="<%= tier %>">
          <summary><%= tier %></summary>
          <%- tiertags.select { |obj| obj.name.match?("^#{tier}:") }.each do |tag| %>
            <%= render partial: "tag", locals: {
                  tag: tag,
                  state: (defined?(muted_tags) && muted_tags.include?(tag)) ? (current_user.tag_cloud_settings["hide_unrelated"] ? :hide : :mute) : :normal
                } %>
          <%- end %>
          <%- if tierunset && tierunset[tier] > 0 %>
            <%= link_to "unset (#{tierunset[tier]})", (@filters || {}).merge(missingtag: tier), {class: "badge rounded-pill border border-muted text-danger tag"} %>
          <%- end %>
        </details>
      </li>
    <% end %>
  </ul>
<% end %>
<% if defined?(muted_tags) && !muted_tags.empty? && current_user.tag_cloud_settings["hide_unrelated"] %>
  <p class="small"><%= pluralize(muted_tags.count, "unrelated tag") %> hidden</p>
<% end %>
